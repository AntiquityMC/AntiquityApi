plugins {
	id 'java-library'
	id 'fabric-loom' version '7c7c47da'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft.useClassicPreset()

repositories {
	maven {
		name = "Jitpack"
		url = "https://jitpack.io"
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings loom.fromCommit("AntiquityMC/PotentialLamp", "0.30_01c-$project.mappings_build") { spec ->
		spec.version = "$project.minecraft_version-$project.mappings_build"
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation("net.fabricmc.fabric-api:fabric-api-base:$project.api_base_version") {
		exclude group: "net.fabricmc", module: "fabric-loader"
	}
	include "net.fabricmc.fabric-api:fabric-api-base:$project.api_base_version"

	modApi "com.github.AntiquityMC:Nbt:$project.nbt_version"
	include "com.github.AntiquityMC:Nbt:$project.nbt_version"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
	// FIXME: Use api (FabricMC/fabric-loom#200)
	modApi "org.apache.logging.log4j:log4j-api:2.8.1"
	modApi "org.apache.logging.log4j:log4j-core:2.8.1"
	modApi "com.google.guava:guava:21.0"
	modApi "com.google.code.gson:gson:2.8.0"
	modApi "org.ow2.asm:asm:8.0"
	modApi "org.ow2.asm:asm-analysis:8.0"
	modApi "org.ow2.asm:asm-commons:8.0"
	modApi "org.ow2.asm:asm-tree:8.0"
	modApi "org.ow2.asm:asm-util:8.0"
	modApi "commons-io:commons-io:2.5"

	compileOnly "org.jetbrains:annotations:19.0.0"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
